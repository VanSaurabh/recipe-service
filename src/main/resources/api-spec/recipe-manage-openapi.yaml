openapi: "3.0.0"
info:
  title: Recipe Management API
  description: A RESTful API for managing favorite recipes
  version: "1.0.0"

servers:
  - url: http://localhost:8080/api/v1

tags:
  - name: Recipe

paths:
  /recipe-manager/api/v1/recipes:
    get:
      summary: Get all recipes
      description: Retrieve a list of all available recipes
      operationId: getRecipes
      tags:
        - recipe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeResponse'
    post:
      summary: Add a new recipe
      description: Add a new recipe to the system
      operationId: addRecipes
      tags:
        - recipe
      requestBody:
        description: Recipe object to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeRequest'
      responses:
        '201':
          description: Created
  /recipe-manager/api/v1/recipes/{id}:
    get:
      summary: Get a specific recipe
      description: Retrieve information about a specific recipe
      operationId: getRecipeById
      tags:
        - recipe
      parameters:
        - in: path
          name: id
          description: ID of the recipe to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeResponse'
        '404':
          description: Recipe not found
    put:
      summary: Update a recipe
      description: Update an existing recipe with new information
      operationId: updateRecipes
      tags:
        - recipe
      parameters:
        - in: path
          name: id
          description: ID of the recipe to update
          required: true
          schema:
            type: integer
      requestBody:
        description: Recipe object to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeRequest'
      responses:
        '200':
          description: OK
        '404':
          description: Recipe not found
    delete:
      summary: Delete a recipe
      description: Remove a recipe from the system
      operationId: deleteRecipe
      tags:
        - recipe
      parameters:
        - in: path
          name: id
          description: ID of the recipe to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No content
  /recipe-manager/api/v1/search/recipes/:
    get:
      summary: Get a specific recipe
      description: Retrieve information about a specific recipe
      operationId: searchRecipes
      tags:
        - recipe
      parameters:
        - in: query
          name: isVeg
          description: filters all the recipes based on isVeg option
          required: false
          schema:
            type: boolean
        - in: query
          name: serving
          description: filters all the recipes based on number of servings
          required: false
          schema:
            type: integer
        - in: query
          name: includedIngredients
          description: filters all the recipes based on number of servings
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: excludedIngredients
          description: filters all the recipes based on number of servings
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: searchInstructions
          description: filters all the recipes based on number of servings
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeResponse'
components:
  schemas:
    RecipeRequest:
      type: object
      properties:
        name:
          type: string
        isVegetarian:
          type: boolean
        servings:
          type: integer
        ingredients:
          type: string
        instructions:
          type: string
      required:
        - name
        - isVegetarian
        - servings
        - instructions
    RecipeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int
        name:
          type: string
        isVegetarian:
          type: boolean
        servings:
          type: integer
        ingredients:
          type: string
        instructions:
          type: string
